ServerName webdav.bardin.haus
#LogLevel debug
ErrorLog /dev/stdout
TransferLog /dev/stdout

DavLockDB /var/tmp/DavLock

<VirtualHost *:8080>
  # The ServerName directive sets the request scheme, hostname and port that
  # the server uses to identify itself. This is used when creating
  # redirection URLs. In the context of virtual hosts, the ServerName
  # specifies what hostname must appear in the request's Host: header to
  # match this virtual host. For the default virtual host (this file) this
  # value is not decisive as it is used as a last resort host regardless.
  # However, you must set it for any further virtual host explicitly.
  ServerName https://webdav.bardin.haus

  ServerAdmin webmaster@localhost
  DocumentRoot /var/www/html

  #Header always set Access-Control-Allow-Origin "*"
  #Header always set Access-Control-Allow-Methods "POST, GET, OPTIONS, DELETE, PUT"
  #Header always set Access-Control-Max-Age "1000"
  #Header always set Access-Control-Allow-Headers "x-requested-with, X-Filename, Content-Type, origin, Authorization, accept, client-security-token"

  #RewriteEngine On
  #RewriteCond %{HTTPS} off
  #RewriteCond %{HTTP:X-Forwarded-Proto} !https
  #RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
  #RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R,L]
  Header set Access-Control-Allow-Origin "*.bardin.haus"

  #GOOD

  #Header always set Access-Control-Allow-Origin "*"
  #Header always set Access-Control-Allow-Methods "POST, GET, OPTIONS, DELETE, PUT"
  #Header always set Access-Control-Max-Age "1000"
  #Header always set Access-Control-Allow-Headers "x-requested-with, X-Filename, Content-Type, origin, Authorization, accept, client-security-token"


  ## Added a rewrite to respond with a 200 SUCCESS on every OPTIONS request.
  #RewriteEngine On
  #RewriteCond %{REQUEST_METHOD} OPTIONS
  #RewriteRule ^(.*)$ $1 [R=200,L]

  LogLevel debug
  ErrorLog /dev/stdout
  TransferLog /dev/stdout
  KeepAlive Off
</VirtualHost>

Alias /incoming /var/incoming
#Alias /incoming/ /var/incoming

#
##RewriteEngine on
##RewriteCond %{HTTPS} off
###RewriteCond %{REQUEST_URI} ^/foo [NC]
###RewriteCond %{HTTP_HOST} ^mydomain.com?
##RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
#
##<Location /incoming>
##    #SSLOptions +StrictRequire
##    #SSLRequireSSL
##
##    Order Deny,Allow
##    Deny from all
##
##    DAV on
##    Options +Indexes
##
##    AuthType Basic
##    AuthName "webdav"
##    AuthUserFile /etc/apache2/webdav.password
##    Require valid-user
##
##    Require all granted
##
##    #Allow all
##</Location>
#
#<Directory /var/incoming>
#    #SSLOptions +StrictRequire
#    #SSLRequireSSL
#
#    Options Indexes FollowSymLinks
#    AllowOverride None
#
#    AuthType Basic
#    AuthName "webdav"
#    AuthUserFile /etc/apache2/webdav.password
#
#    
#    #Require valid-user
#    #Require all granted
#    #Allow from all
#
#    <RequireAny>
#    Require method GET POST OPTIONS
#    Require user admin
#    </RequireAny>
#</Directory>

<Directory "/var/incoming">
  Require all granted
  Dav On

  AuthType Basic
  AuthName DAV
  AuthUserFile "/etc/apache2/webdav.password"

  Options Indexes FollowSymLinks
#    AllowOverride None

  <LimitExcept GET POST OPTIONS>
    Require user admin
  </LimitExcept>
</Directory>
